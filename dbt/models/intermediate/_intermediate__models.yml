
version: 2

models:
  - name: int_join_spotify_uris
    tests:
    - dbt_utils.equal_rowcount:
        name: 'equal_rowcount: int_join_spotify_uris + stg__spotify_log'
        compare_model: ref('stg__spotify_log')
    - dbt_utils.unique_combination_of_columns:
        name: 'unique_combination_of_columns: int_join_spotify_uris (exclude skipped)'
        combination_of_columns:
          - spotify_uri
          - spotify_playlist_id
        where:
          "status = 'saved' and spotify_playlist_id is not null" # remove other users' albums and playlists
    columns:
      - name: spotify_type
        tests:
          - accepted_values:
              values: ['Album', 'Playlist', 'Track']
      - name: spotify_uri
        tests:
          - dbt_expectations.expect_column_values_to_match_regex:
              name: 'match_regex: int_join_spotify_uris, spotify_uri'
              regex: "^spotify:(album|playlist|track):"
      - name: percentage_in_desc
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              name: 'percentage_in_desc <= 100'
              expression: "<= 100"
          - dbt_utils.expression_is_true:
              name: 'percentage_in_desc >= 0'
              expression: ">= 0"


  - name: int_useful_youtube_library
    tests:
    - dbt_utils.equal_rowcount:
        name: 'equal_rowcount: int_useful_youtube_library + stg__youtube_library'
        compare_model: ref('stg__youtube_library')
    columns:
      - name: estimated_type
        tests:
          - accepted_values:
              values: ['Track', 'Album/Playlist']